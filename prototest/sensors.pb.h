/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Sat Jul 01 22:05:23 2017. */

#ifndef PB_SENSORS_PB_H_INCLUDED
#define PB_SENSORS_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Error {
    float bias;
    float noise;
/* @@protoc_insertion_point(struct:Error) */
} Error;

typedef struct _Rate {
    float frequency;
    float delta_time;
/* @@protoc_insertion_point(struct:Rate) */
} Rate;

typedef struct _Update {
    uint32_t version;
    uint64_t origin;
    uint32_t hwrev;
    pb_size_t which_time_type;
    union {
        int64_t time;
        uint32_t rel_time;
    } time_type;
    pb_callback_t position;
    pb_callback_t velocity;
    pb_callback_t acceleration;
    pb_callback_t orientation;
    pb_callback_t angular_rate;
    pb_callback_t air_pressure;
    pb_callback_t illumination;
/* @@protoc_insertion_point(struct:Update) */
} Update;

typedef struct _Acceleration {
    Rate rate;
    float x;
    Error x_error;
    float y;
    Error y_error;
    float z;
    Error z_error;
/* @@protoc_insertion_point(struct:Acceleration) */
} Acceleration;

typedef struct _AirPressure {
    Rate rate;
    float air_pressure;
    Error air_pressure_error;
/* @@protoc_insertion_point(struct:AirPressure) */
} AirPressure;

typedef struct _AngularRate {
    Rate rate;
    float yaw;
    Error yaw_error;
    float pitch;
    Error pitch_error;
    float roll;
    Error roll_error;
/* @@protoc_insertion_point(struct:AngularRate) */
} AngularRate;

typedef struct _Illumination {
    Rate rate;
    float illumination;
    Error illumination_error;
/* @@protoc_insertion_point(struct:Illumination) */
} Illumination;

typedef struct _Orientation {
    Rate rate;
    float heading;
    Error heading_error;
    float elevation;
    Error elevation_error;
    float bank;
    Error bank_error;
    float a;
    float b;
    float c;
    float d;
    Error quat_error;
/* @@protoc_insertion_point(struct:Orientation) */
} Orientation;

typedef struct _Position {
    Rate rate;
    double latitude;
    Error latitude_error;
    double longitude;
    Error longitude_error;
    float altitude;
    Error altitude_error;
    double x;
    Error x_error;
    double y;
    Error y_error;
    double z;
    Error z_error;
    bool local_origin;
/* @@protoc_insertion_point(struct:Position) */
} Position;

typedef struct _Velocity {
    Rate rate;
    float x;
    Error x_error;
    float y;
    Error y_error;
    float z;
    Error z_error;
    float total;
    Error total_error;
/* @@protoc_insertion_point(struct:Velocity) */
} Velocity;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Update_init_default                      {0, 0, 0, 0, {0}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Rate_init_default                        {0, 0}
#define Error_init_default                       {0, 0}
#define Position_init_default                    {Rate_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default, 0}
#define Velocity_init_default                    {Rate_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default}
#define Acceleration_init_default                {Rate_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default}
#define Orientation_init_default                 {Rate_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default, 0, 0, 0, 0, Error_init_default}
#define AngularRate_init_default                 {Rate_init_default, 0, Error_init_default, 0, Error_init_default, 0, Error_init_default}
#define AirPressure_init_default                 {Rate_init_default, 0, Error_init_default}
#define Illumination_init_default                {Rate_init_default, 0, Error_init_default}
#define Update_init_zero                         {0, 0, 0, 0, {0}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Rate_init_zero                           {0, 0}
#define Error_init_zero                          {0, 0}
#define Position_init_zero                       {Rate_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0}
#define Velocity_init_zero                       {Rate_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero}
#define Acceleration_init_zero                   {Rate_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero}
#define Orientation_init_zero                    {Rate_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, 0, 0, 0, Error_init_zero}
#define AngularRate_init_zero                    {Rate_init_zero, 0, Error_init_zero, 0, Error_init_zero, 0, Error_init_zero}
#define AirPressure_init_zero                    {Rate_init_zero, 0, Error_init_zero}
#define Illumination_init_zero                   {Rate_init_zero, 0, Error_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define Error_bias_tag                           1
#define Error_noise_tag                          2
#define Rate_frequency_tag                       1
#define Rate_delta_time_tag                      2
#define Update_time_tag                          4
#define Update_rel_time_tag                      5
#define Update_version_tag                       1
#define Update_origin_tag                        2
#define Update_hwrev_tag                         3
#define Update_position_tag                      64
#define Update_velocity_tag                      65
#define Update_acceleration_tag                  66
#define Update_orientation_tag                   67
#define Update_angular_rate_tag                  68
#define Update_air_pressure_tag                  70
#define Update_illumination_tag                  71
#define Acceleration_rate_tag                    1
#define Acceleration_x_tag                       2
#define Acceleration_y_tag                       4
#define Acceleration_z_tag                       6
#define Acceleration_x_error_tag                 3
#define Acceleration_y_error_tag                 5
#define Acceleration_z_error_tag                 7
#define AirPressure_rate_tag                     1
#define AirPressure_air_pressure_tag             2
#define AirPressure_air_pressure_error_tag       3
#define AngularRate_rate_tag                     1
#define AngularRate_yaw_tag                      2
#define AngularRate_pitch_tag                    4
#define AngularRate_roll_tag                     6
#define AngularRate_yaw_error_tag                3
#define AngularRate_pitch_error_tag              5
#define AngularRate_roll_error_tag               7
#define Illumination_rate_tag                    1
#define Illumination_illumination_tag            2
#define Illumination_illumination_error_tag      3
#define Orientation_rate_tag                     1
#define Orientation_heading_tag                  2
#define Orientation_elevation_tag                4
#define Orientation_bank_tag                     6
#define Orientation_heading_error_tag            3
#define Orientation_elevation_error_tag          5
#define Orientation_bank_error_tag               7
#define Orientation_a_tag                        14
#define Orientation_b_tag                        15
#define Orientation_c_tag                        16
#define Orientation_d_tag                        17
#define Orientation_quat_error_tag               18
#define Position_rate_tag                        1
#define Position_latitude_tag                    2
#define Position_longitude_tag                   4
#define Position_altitude_tag                    6
#define Position_latitude_error_tag              3
#define Position_longitude_error_tag             5
#define Position_altitude_error_tag              7
#define Position_x_tag                           8
#define Position_y_tag                           10
#define Position_z_tag                           12
#define Position_x_error_tag                     9
#define Position_y_error_tag                     11
#define Position_z_error_tag                     13
#define Position_local_origin_tag                14
#define Velocity_rate_tag                        1
#define Velocity_x_tag                           2
#define Velocity_y_tag                           4
#define Velocity_z_tag                           6
#define Velocity_x_error_tag                     3
#define Velocity_y_error_tag                     5
#define Velocity_z_error_tag                     7
#define Velocity_total_tag                       8
#define Velocity_total_error_tag                 9

/* Struct field encoding specification for nanopb */
extern const pb_field_t Update_fields[13];
extern const pb_field_t Rate_fields[3];
extern const pb_field_t Error_fields[3];
extern const pb_field_t Position_fields[15];
extern const pb_field_t Velocity_fields[10];
extern const pb_field_t Acceleration_fields[8];
extern const pb_field_t Orientation_fields[13];
extern const pb_field_t AngularRate_fields[8];
extern const pb_field_t AirPressure_fields[4];
extern const pb_field_t Illumination_fields[4];

/* Maximum encoded size of messages (where known) */
/* Update_size depends on runtime parameters */
#define Rate_size                                10
#define Error_size                               10
#define Position_size                            136
#define Velocity_size                            80
#define Acceleration_size                        63
#define Orientation_size                         98
#define AngularRate_size                         63
#define AirPressure_size                         29
#define Illumination_size                        29

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSORS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
